-- public.tbl_address definition

-- Drop table

-- DROP TABLE public.tbl_address;

CREATE TABLE IF NOT EXISTS public.tbl_address (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	zip_code varchar(8) NOT NULL,
	address varchar(300) NOT NULL,
	complement varchar(200) NOT NULL,
	reference_point varchar(200) NULL,
	neighborhood varchar(200) NOT NULL,
	city varchar(200) NOT NULL,
	state varchar(200) NOT NULL,
	CONSTRAINT tbl_address_pk PRIMARY KEY (id)
);

-- Permissions

ALTER TABLE public.tbl_address OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_address TO postgres;

-- public.tbl_role definition

-- Drop table

-- DROP TABLE public.tbl_role;

CREATE TABLE IF NOT EXISTS public.tbl_role (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	role_name varchar(255) NOT NULL,
	description varchar(255) NOT NULL,
	is_ecclesiastical_function bool NOT NULL,
	hierarchical_order int4 NOT NULL,
	CONSTRAINT tbl_role_pk PRIMARY KEY (id),
	CONSTRAINT tbl_role_un UNIQUE (role_name)
);

-- Permissions

ALTER TABLE public.tbl_role OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_role TO postgres;


-- public.tbl_system_roles definition

-- Drop table

-- DROP TABLE public.tbl_system_roles;

CREATE TABLE IF NOT EXISTS public.tbl_system_roles (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	role_name varchar NOT NULL,
	CONSTRAINT tbl_system_roles_pk PRIMARY KEY (id),
	CONSTRAINT tbl_system_roles_un UNIQUE (role_name)
);

INSERT INTO public.tbl_system_roles (id, role_name) VALUES(1, 'ROLE_USER');
INSERT INTO public.tbl_system_roles (id, role_name) VALUES(2, 'ROLE_MODERATOR');
INSERT INTO public.tbl_system_roles (id, role_name) VALUES(3, 'ROLE_ADMIN');

-- Permissions

ALTER TABLE public.tbl_system_roles OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_system_roles TO postgres;


-- public.tbl_user definition

-- Drop table

-- DROP TABLE public.tbl_user;

CREATE TABLE IF NOT EXISTS public.tbl_user (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username varchar NOT NULL,
	email varchar NOT NULL,
	"password" varchar NOT NULL,
	CONSTRAINT tbl_user_pk PRIMARY KEY (id),
	CONSTRAINT tbl_user_un UNIQUE (email, username)
);

-- Permissions

ALTER TABLE public.tbl_user OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_user TO postgres;

-- Auto-generated SQL script #202306071440
INSERT INTO public.tbl_user (username,email,"password")
	VALUES ('admin','admin@mensageriaapp.app.com','$2a$10$TNKCPO7dTNU.LpjOPkyGquzls1uvcJYq8AbfPXsi1eBdKFSkbOi36');


-- public.tbl_client definition

-- Drop table

-- DROP TABLE public.tbl_client;

CREATE TABLE IF NOT EXISTS public.tbl_client (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	client_name varchar(255) NOT NULL,
	birth_date date NOT NULL,
	gender bpchar(1) NOT NULL,
	marital_status varchar(100) NOT NULL,
	spouse_name varchar(255) NULL,
	nationality varchar(200) NOT NULL,
	academic_education varchar(255) NOT NULL,
	email varchar(255) NULL,
	register_date timestamp NOT NULL,
	cpf varchar(11) NOT NULL,
	address_id int8 NOT NULL,
	telephone int8 NOT NULL,
	active bool NOT NULL,
	departure_date date NULL,
	CONSTRAINT academic_education_check CHECK (((academic_education)::text = ANY ((ARRAY['ensino fundamental incompleto'::character varying, 'ensino fundamental completo'::character varying, 'ensino médio incompleto'::character varying, 'ensino médio completo'::character varying, 'superior incompleto'::character varying, 'superior completo'::character varying, 'pós-graduação incompleta'::character varying, 'pós-graduação completa'::character varying, 'mestrado incompleto'::character varying, 'mestrado completo'::character varying, 'doutorado incompleto'::character varying, 'doutorado completo'::character varying])::text[]))),
	CONSTRAINT marital_status_check CHECK (((marital_status)::text = ANY ((ARRAY['solteiro'::character varying, 'divorciado'::character varying, 'casado'::character varying, 'viúvo'::character varying, 'separado judicialmente'::character varying, 'desquitado'::character varying])::text[]))),
	CONSTRAINT tbl_client_pk PRIMARY KEY (id),
	CONSTRAINT tbl_client_un UNIQUE (cpf),
	CONSTRAINT tbl_client_fk FOREIGN KEY (address_id) REFERENCES public.tbl_address(id)
);

-- Permissions

ALTER TABLE public.tbl_client OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_client TO postgres;


-- public.tbl_user_role definition

-- Drop table

-- DROP TABLE public.tbl_user_role;

CREATE TABLE IF NOT EXISTS public.tbl_user_role (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id int8 NOT NULL,
	role_id int8 NOT NULL,
	CONSTRAINT tbl_user_role_pk PRIMARY KEY (id),
	CONSTRAINT tbl_user_role_fk FOREIGN KEY (role_id) REFERENCES public.tbl_system_roles(id),
	CONSTRAINT tbl_user_role_fk_1 FOREIGN KEY (user_id) REFERENCES public.tbl_user(id)
);

-- Permissions

ALTER TABLE public.tbl_user_role OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_user_role TO postgres;

-- Auto-generated SQL script #202306071441
INSERT INTO public.tbl_user_role (user_id,role_id)
	VALUES (1,3);


-- public.tbl_order definition

-- Drop table

-- DROP TABLE public.tbl_order;

CREATE TABLE IF NOT EXISTS public.tbl_order (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	client_id int8 NOT NULL,
	role_id int8 NOT NULL,
	receive_salary bool NOT NULL,
	salary_amount numeric(15, 2) NULL,
	date_took_office date NULL,
	CONSTRAINT tbl_order_pk PRIMARY KEY (id),
	CONSTRAINT tbl_order_fk FOREIGN KEY (client_id) REFERENCES public.tbl_client(id),
	CONSTRAINT tbl_order_fk_1 FOREIGN KEY (role_id) REFERENCES public.tbl_role(id)
);

-- Permissions

ALTER TABLE public.tbl_order OWNER TO postgres;
GRANT ALL ON TABLE public.tbl_order TO postgres;
